// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniversityReservations.Data;

#nullable disable

namespace UniversityReservations.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UniversityReservations.Models.LectureHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<bool>("HasMicrophone")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasProjector")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("LectureHalls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 100,
                            HasMicrophone = true,
                            HasProjector = true,
                            Location = "Building 1, Floor 2",
                            Name = "Hall A"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 50,
                            HasMicrophone = true,
                            HasProjector = false,
                            Location = "Building 1, Floor 1",
                            Name = "Hall B"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 300,
                            HasMicrophone = true,
                            HasProjector = true,
                            Location = "Building 2, Floor 1",
                            Name = "Auditorium"
                        });
                });

            modelBuilder.Entity("UniversityReservations.Models.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lecturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@university.edu",
                            FirstName = "John",
                            LastName = "Doe",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@university.edu",
                            FirstName = "Jane",
                            LastName = "Smith",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "robert.johnson@university.edu",
                            FirstName = "Robert",
                            LastName = "Johnson",
                            SubjectId = 3
                        });
                });

            modelBuilder.Entity("UniversityReservations.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LectureHallId")
                        .HasColumnType("integer");

                    b.Property<int>("LecturerId")
                        .HasColumnType("integer");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("LectureHallId", "StartTime", "EndTime")
                        .IsUnique();

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new DateTime(2024, 1, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureHallId = 1,
                            LecturerId = 1,
                            Purpose = "Calculus Lecture",
                            StartTime = new DateTime(2024, 1, 15, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new DateTime(2024, 1, 16, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureHallId = 2,
                            LecturerId = 2,
                            Purpose = "Quantum Mechanics",
                            StartTime = new DateTime(2024, 1, 16, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new DateTime(2024, 1, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureHallId = 3,
                            LecturerId = 3,
                            Purpose = "Data Structures and Algorithms",
                            StartTime = new DateTime(2024, 1, 17, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("UniversityReservations.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Advanced mathematics course",
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fundamental physics principles",
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Programming and algorithms",
                            Name = "Computer Science"
                        });
                });

            modelBuilder.Entity("UniversityReservations.Models.Lecturer", b =>
                {
                    b.HasOne("UniversityReservations.Models.Subject", "Subject")
                        .WithMany("Lecturers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniversityReservations.Models.Reservation", b =>
                {
                    b.HasOne("UniversityReservations.Models.LectureHall", "LectureHall")
                        .WithMany("Reservations")
                        .HasForeignKey("LectureHallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityReservations.Models.Lecturer", "Lecturer")
                        .WithMany("Reservations")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LectureHall");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("UniversityReservations.Models.LectureHall", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("UniversityReservations.Models.Lecturer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("UniversityReservations.Models.Subject", b =>
                {
                    b.Navigation("Lecturers");
                });
#pragma warning restore 612, 618
        }
    }
}
